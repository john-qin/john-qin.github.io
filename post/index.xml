<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on JOHN QIN, a father of two</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on JOHN QIN, a father of two</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Tue, 03 Mar 2015 19:29:23 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Golang Method</title>
      <link>http://localhost:1313/golang-method/</link>
      <pubDate>Tue, 03 Mar 2015 19:29:23 -0500</pubDate>
      
      <guid>http://localhost:1313/golang-method/</guid>
      <description>&lt;p&gt;Go has both functions and methods. In Go, a method is a function that is declared with a receiver. A receiver is a value or a pointer of a named or struct type.  All the methods for a given type belong to the type&amp;rsquo;s method set.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s declare a struct type and a method for that type:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;type User struct {
    Name string
    Email string
}

func (u User) Notify() error
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;First we declare a struct type named &lt;strong&gt;User&lt;/strong&gt; and then we declare a method named &lt;strong&gt;Notify&lt;/strong&gt; with a receiver that accepts a value of type &lt;strong&gt;User&lt;/strong&gt;. To call the &lt;strong&gt;Notify&lt;/strong&gt; method we need a value or pointer of type User:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// Value of type User can be used to call the method
// with a value receiver.
bill := User{“Bill”, “bill@email.com”}
bill.Notify()

// Pointer of type User can also be used to call a method
// with a value receiver.
jill := &amp;amp;User{“Jill”, “jill@email.com”}
jill.Notify()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in the case where we are using a pointer, Go adjusts and dereferences the pointer so the call can be made. Be aware that when the receiver is not a pointer, the method is operating against a copy of the receiver value.&lt;/p&gt;

&lt;p&gt;If you are unsure about when to use a value or a pointer for the receiver, always use pointer. The Go wiki has a great set of &lt;a href=&#34;https://code.google.com/p/go-wiki/wiki/CodeReviewComments#Receiver_Type&#34;&gt;rules&lt;/a&gt; that you can follow.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moving from Ghost to HUGO</title>
      <link>http://localhost:1313/moving-from-ghost-to-hugo/</link>
      <pubDate>Tue, 03 Mar 2015 06:57:58 -0500</pubDate>
      
      <guid>http://localhost:1313/moving-from-ghost-to-hugo/</guid>
      <description>&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&amp;rsquo;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.&lt;/p&gt;

&lt;p&gt;It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using &amp;lsquo;Content here, content here&amp;rsquo;, making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for &amp;lsquo;lorem ipsum&amp;rsquo; will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).&lt;/p&gt;

&lt;p&gt;Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of &amp;ldquo;de Finibus Bonorum et Malorum&amp;rdquo; (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, &amp;ldquo;Lorem ipsum dolor sit amet..&amp;rdquo;, comes from a line in section 1.10.32.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;section id=&amp;quot;main&amp;quot;&amp;gt;
  &amp;lt;div&amp;gt;
   &amp;lt;h1 id=&amp;quot;title&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
    {{ range .Data.Pages }}
        {{ .Render &amp;quot;summary&amp;quot;}}
    {{ end }}
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I discovered HUGO. Hugo is a static blog generator, written with a language (GOLANG), i use everyday.&lt;/p&gt;

&lt;p&gt;So, i moved from GHOST to HUGO hosted on Google App engine.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>